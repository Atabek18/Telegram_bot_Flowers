from keyboards.reply.choise_reply_buttons import keyboards_reply
from keyboards.inline.choice_inline_buttons import inline_keyboards
from keyboards.inline.callback_datas import savat_callback, Delivary
from aiogram.types import CallbackQuery, Message
from database.sqlite_db_user import CREATE_DB
from aiogram.dispatcher import FSMContext
from handlers.uzb_users import States
from loader import dp, bot
from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import sqlite3
from handlers.uzb_users.each_buket import get_data

va_delivary = """(id INTEGER PRIMARY KEY AUTOINCREMENT,
        user_id TEXT, user_fname TEXT, user_lname TEXT,
        buket TEXT, how_many INTEGER, how_much_it TEXT,
        style TEXT,is_fulfilled TEXT,contact TEXT, zakaz_qilingan_vaqti TEXT, order_time TIMESTAMP,
        location_name TEXT, location_longitude TEXT, location_latitude TEXT)"""
DL = CREATE_DB(db_file_name='flower.db', tabel_name='shopping')
DL.ST_DB(values=va_delivary)


@dp.callback_query_handler(Delivary.filter(item_name='Delivary'))
async def buy_chooses(call: CallbackQuery, callback_data: dict,
                      state: FSMContext):
  try:
    t_conn = sqlite3.connect('flower.db')
    t_curr = t_conn.cursor()
    t_curr.execute(
      f"SELECT language FROM translates_from_id WHERE user_id = {call.message.chat.id}"
    )
    select = t_curr.fetchall()
    translate_dict = {
      'rus': '–•–æ—Ç–∏—Ç–µ —á—Ç–æ–±—ã –±—ã–ª–∞ –Ω–∞–¥–ø–∏—Å—å –≤ –±—É–∫–µ—Ç–µ?',
      'uzb': 'Guldastaning ustida yozuv bo\'lisni xohlaysizmi?'
    }
    callback_data['how_many'] = call.message.reply_markup.inline_keyboard[0][
      1].text
    # logging.info( f'User_id: {call.message.chat.id}, Chat_id: {call.message.message_id},   {callback_data=}')
    await bot.delete_message(call.message.chat.id, call.message.message_id)
    if callback_data['which_item'] == 'Qutili':
      open_p = 'K–æ—Ä–æ–±–∫a'
    else:
      open_p = callback_data["which_item"].split('-')[0] + 'tali'
    async with state.proxy() as data:
      if callback_data['which_item'] == 'Qutili' or callback_data[
          'which_item'] == 'K–æ—Ä–æ–±–∫a':
        data['which_item'] = 'Qutili'
      else:
        data['which_item'] = callback_data['which_item'].split(
          '-')[0] + '-tali'

    try:
      with open(f'imgs/{open_p}.jpg', 'rb') as photo_:
        await bot.send_photo(
          chat_id=call.message.chat.id,
          photo=photo_,
          caption=translate_dict[select[0][0]],
          reply_markup=keyboards_reply[select[0][0]]['yes_or_no'])
    except:
      with open('imgs/K–æ—Ä–æ–±–∫a.jpg', 'rb') as photo_:
        await bot.send_photo(
          chat_id=call.message.chat.id,
          photo=photo_,
          caption=translate_dict[select[0][0]],
          reply_markup=keyboards_reply[select[0][0]]['yes_or_no'])

    v = '(user_id, user_fname, user_lname, buket, how_many, how_much_it, style, is_fulfilled, contact, zakaz_qilingan_vaqti, order_time)'
    async with state.proxy() as data:
      values = (call.message.chat.id, call.message.chat.first_name,
                call.message.chat.last_name, data['which_item'],
                int(callback_data['how_many']), callback_data['how_much_it'],
                'yoziqsiz', 'No', None, None, None)

    await DL.ADD_DB(values=values,
                    str_v=v,
                    how_many_values='(?,?,?,?,?,?,?,?,?,?,?)')
    await States.States_.CHOOSING_OPTION.set()
  except:
    await bot.send_message(
      call.message.chat.id,
      "üá∫üáø Botimiz yangilangaligi tufayli /start buyruqi orqali ishga tushuring\n\nüá∑üá∫ –í —Å–≤—è–∑–∏ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –±–æ—Ç–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç –∫–æ–º–º–∞–Ω–¥–æ–π /start"
    )


@dp.message_handler(text=["‚ùå Yo'q", '‚ùå –ù–µ—Ç'],
                    state=States.States_.CHOOSING_OPTION)
async def process_cancel_style(message: Message, state: FSMContext):
  try:
    t_conn = sqlite3.connect('flower.db')
    t_curr = t_conn.cursor()
    t_curr.execute(
      f"SELECT language FROM translates_from_id WHERE user_id = {message.chat.id}"
    )
    select = t_curr.fetchall()
    translate_dict = {
      'rus': '–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∏–ø —É–ø–∞–∫–æ–≤–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É',
      'uzb': "Siz tanlagan guldasta savatga qo'shildi"
    }
    async with state.proxy() as data:
      if data['which_item'] == 'Qutili':
        await message.answer(
          translate_dict[select[0][0]],
          reply_markup=keyboards_reply[select[0][0]]['Karobka'])
      else:
        await message.answer(
          translate_dict[select[0][0]],
          reply_markup=keyboards_reply[select[0][0]]['Buket'])
    await state.finish()
  except:
    await message.reply(
      "üá∫üáø Botimiz yangilangaligi tufayli /start buyruqi orqali ishga tushuring\n\nüá∑üá∫ –í —Å–≤—è–∑–∏ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –±–æ—Ç–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç –∫–æ–º–º–∞–Ω–¥–æ–π /start"
    )


@dp.message_handler(text=['‚úÖ Ha', '‚úÖ –î–∞'],
                    state=States.States_.CHOOSING_OPTION)
async def process_make_style(message: Message, state: FSMContext):
  try:
    t_conn = sqlite3.connect('flower.db')
    t_curr = t_conn.cursor()
    t_curr.execute(
      f"SELECT language FROM translates_from_id WHERE user_id = {message.chat.id}"
    )
    select = t_curr.fetchall()
    translate_dict = {
      'rus':
      '–ù–∞–ø–∏—à–∏—Ç–µ —Å–ª–æ–≤–æ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–µ–ª–∏ –±—ã –≤–∏–¥–µ—Ç—å –≤ –±—É–∫–µ—Ç–µ',
      'uzb':
      'Guldasta ustiga yozuv yozilishi uchun birorta so\'z yozib qoldiring\nNamuna: Ona'
    }

    await States.States_.STYLE_NAME.set()
    await message.answer(
      translate_dict[select[0][0]],
      reply_markup=keyboards_reply[select[0][0]]['Back_for_Ha'])
  except:
    await message.reply(
      "üá∫üáø Botimiz yangilangaligi tufayli /start buyruqi orqali ishga tushuring\n\nüá∑üá∫ –í —Å–≤—è–∑–∏ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –±–æ—Ç–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç –∫–æ–º–º–∞–Ω–¥–æ–π /start"
    )


@dp.message_handler(state=States.States_.STYLE_NAME)
async def process_write(message: Message, state: FSMContext):
  try:
    t_conn = sqlite3.connect('flower.db')
    t_curr = t_conn.cursor()
    t_curr.execute(
      f"SELECT language FROM translates_from_id WHERE user_id = {message.chat.id}"
    )
    select = t_curr.fetchall()
    translate_dict = {'uzb': 'Siz ortga qaytingiz', 'rus': '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å'}
    translate_dict1 = {
      'uzb':
      'Yozgan yozuvingizni guldastaning ustiga yozilsinmi?',
      'rus':
      '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –≤—ã—à–µ –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —á—Ç–æ–±—ã –±—ã–ª –Ω–∞–¥–ø–∏—Å—å—é –±—É–∫–µ—Ç–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –≤—ã–±—Ä–∞–ª–∏?'
    }
    async with state.proxy() as data:
      if (message.text == '‚¨Ö Ortga' and data['which_item'] == 'Qutili') or (
          message.text == '‚¨Ö –ù–∞–∑–∞–¥' and data['which_item'] == 'Qutili'):
        await message.answer(
          translate_dict[select[0][0]],
          reply_markup=keyboards_reply[select[0][0]]['Karobka'])
        await state.finish()
      elif message.text == '‚¨Ö Ortga' or message.text == '‚¨Ö –ù–∞–∑–∞–¥':
        await message.answer(
          translate_dict[select[0][0]],
          reply_markup=keyboards_reply[select[0][0]]['Buket'])
        await state.finish()
      else:
        data['style'] = message.text
        await message.answer(
          translate_dict1[select[0][0]],
          reply_markup=inline_keyboards[select[0][0]]['confirmation'])
        await States.States_.CONFIRMATION.set()
  except:
    await message.reply(
      "üá∫üáø Botimiz yangilangaligi tufayli /start buyruqi orqali ishga tushuring\n\nüá∑üá∫ –í —Å–≤—è–∑–∏ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –±–æ—Ç–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç –∫–æ–º–º–∞–Ω–¥–æ–π /start"
    )


@dp.callback_query_handler(text='confirm', state=States.States_.CONFIRMATION)
async def confirm_style(call: CallbackQuery, state: FSMContext):
  try:
    t_conn = sqlite3.connect('flower.db')
    t_curr = t_conn.cursor()
    t_curr.execute(
      f"SELECT language FROM translates_from_id WHERE user_id = {str(call.message.chat.id)}"
    )
    select = t_curr.fetchall()
    translate_dict1 = {
      'uzb': 'Yozganningizni qabul qildik',
      'rus': '–í–∞—à–∞ –Ω–∞–¥–ø–∏—Å—å –ø—Ä–∏–Ω—è—Ç–∞'
    }
    async with state.proxy() as data:
      if data['which_item'] == 'Qutili':
        conn = sqlite3.connect('flower.db')
        cursor = conn.cursor()
        cursor.execute(
          "SELECT id FROM shopping WHERE user_id = ? AND id ORDER BY id DESC LIMIT 1",
          (str(call.message.chat.id), ))
        last_id = cursor.fetchall()[0]
        cursor.execute(
          "UPDATE shopping SET style = ? WHERE user_id = ? AND buket = ? AND id = ?",
          (data['style'], call.message.chat.id, data['which_item'],
           last_id[0]))
        conn.commit()
        await bot.send_message(
          chat_id=call.message.chat.id,
          text=translate_dict1[select[0][0]],
          reply_markup=keyboards_reply[select[0][0]]['Karobka'])
      else:
        conn = sqlite3.connect('flower.db')
        cursor = conn.cursor()
        cursor.execute(
          "SELECT id FROM shopping WHERE user_id = ? AND id ORDER BY id DESC LIMIT 1",
          (str(call.message.chat.id), ))
        last_id = cursor.fetchall()[0]
        cursor.execute(
          "UPDATE shopping SET style = ? WHERE user_id = ? AND buket = ? AND id = ?",
          (data['style'], call.message.chat.id, data['which_item'],
           last_id[0]))
        conn.commit()
        conn.close()
        await bot.send_message(
          chat_id=call.message.chat.id,
          text=translate_dict1[select[0][0]],
          reply_markup=keyboards_reply[select[0][0]]['Buket'])

      await bot.delete_message(chat_id=call.message.chat.id,
                               message_id=call.message.message_id)
      await state.finish()
  except:
    await bot.send_message(
      chat_id=call.message.chat.id,
      text=
      "üá∫üáø Botimiz yangilangaligi tufayli /start buyruqi orqali ishga tushuring\n\nüá∑üá∫ –í —Å–≤—è–∑–∏ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –±–æ—Ç–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç –∫–æ–º–º–∞–Ω–¥–æ–π /start"
    )


@dp.callback_query_handler(text='cancel', state=States.States_.CONFIRMATION)
async def reject_style(call: CallbackQuery, state: FSMContext):
  try:
    t_conn = sqlite3.connect('flower.db')
    t_curr = t_conn.cursor()
    t_curr.execute(
      f"SELECT language FROM translates_from_id WHERE user_id = {call.message.chat.id}"
    )
    select = t_curr.fetchall()
    translate_dict = {
      'uzb': 'Siz yozganlaringizni bekor qildingiz',
      'rus': '–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Ç–æ, —á—Ç–æ –Ω–∞–ø–∏—Å–∞–ª–∏'
    }
    async with state.proxy() as data:
      if data['which_item'] == 'Qutili':
        await bot.send_message(
          chat_id=call.message.chat.id,
          text=translate_dict[select[0][0]],
          reply_markup=keyboards_reply[select[0][0]]['Karobka'])
      else:
        await bot.send_message(
          chat_id=call.message.chat.id,
          text=translate_dict[select[0][0]],
          reply_markup=keyboards_reply[select[0][0]]['Buket'])
    await bot.delete_message(chat_id=call.message.chat.id,
                             message_id=call.message.message_id)
    await state.finish()

  except:
    await bot.send_message(
      chat_id=call.message.chat.id,
      text=
      "üá∫üáø Botimiz yangilangaligi tufayli /start buyruqi orqali ishga tushuring\n\nüá∑üá∫ –í —Å–≤—è–∑–∏ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –±–æ—Ç–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç –∫–æ–º–º–∞–Ω–¥–æ–π /start"
    )


@dp.callback_query_handler(lambda query: query.data.startswith('del'))
async def del_each_delivary(call: CallbackQuery):
  try:
    t_conn = sqlite3.connect('flower.db')
    t_curr = t_conn.cursor()
    t_curr.execute(
      f"SELECT language FROM translates_from_id WHERE user_id = {call.message.chat.id}"
    )
    select = t_curr.fetchall()
    translate_dict = {
      'uzb': 'Kechirasiz, nimadir noto‚Äòg‚Äòri ketdi, qayta urinib ko‚Äòring',
      'rus': '–ò–∑–≤–∏–Ω–∏—Ç–µ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑'
    }
    translate_dict1 = {
      'uzb': 'Sizning savatingiz boshadi',
      'rus': '–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞'
    }
    data = call.data
    t = data.split('del')[1].split('-')[0] + '-tali' if data.split(
      'del')[1] != 'Qutili' else 'Qutili'
    try:
      conn = sqlite3.connect('flower.db')
      cursor = conn.cursor()
      cursor.execute(
        "DELETE FROM shopping WHERE buket = ? AND user_id = ? AND is_fulfilled = ?",
        (t, str(call.message.chat.id), "No"))
      conn.commit()
      cursor.execute(
        "SELECT how_many, buket, how_much_it FROM shopping WHERE user_id=? AND is_fulfilled=?",
        (call.message.chat.id, 'No'))
      query = cursor.fetchall()
      set_select = set([i[1] for i in query])

      if select[0][0] == 'uzb' and set_select:
        group, total_narx_, yol_haqqi, total = get_data(query)
        key = [
          types.InlineKeyboardButton(text='‚ùå' + i,
                                     callback_data='del{}'.format(i))
          for i in set_select
        ]
        new_but = InlineKeyboardMarkup(
          inline_keyboard=[[
            InlineKeyboardButton(text='üöñ Buyurtma Berish',
                                 callback_data='open_delivery',
                                 cache_time=1)
          ],
                           [
                             InlineKeyboardButton(text='‚¨Ö Ortga',
                                                  callback_data='close'),
                             InlineKeyboardButton(text='üóë Savatni tozalash',
                                                  callback_data='clear_to_')
                           ]]).add(*key)
        await bot.edit_message_text(
          chat_id=call.message.chat.id,
          message_id=call.message.message_id,
          text=
          f'üì• Savat ichida:\n{group.to_string(index=False, header=False)}\nTovarlar: {str(total_narx_)} sum\nYo\'l haqqi: {yol_haqqi}\nJami: {total} sum',
          reply_markup=new_but)
      elif set_select and select[0][0] == 'rus':
        group, total_narx_, yol_haqqi, total = get_data(query)
        uzb = [
          '101-tali', '201-tali', '301-tali', '401-tali', '501-tali',
          '601-tali', '701-tali', '1001-tali', 'Qutili'
        ]
        rus = [
          '101', '201', '301', '401', '501', '601', '701', '1001', 'K–æ—Ä–æ–±–∫a'
        ]
        get_it = dict(zip(uzb, rus))
        key = [
          types.InlineKeyboardButton(text='‚ùå' + get_it[i],
                                     callback_data='del{}'.format(i))
          for i in set_select
        ]
        new_but = InlineKeyboardMarkup(
          inline_keyboard=[[
            InlineKeyboardButton(
              text='üöñ –ó–∞–∫–∞–∑–∞—Ç—å', callback_data='open_delivery', cache_time=1)
          ],
                           [
                             InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥',
                                                  callback_data='close'),
                             InlineKeyboardButton(text='üóë –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É',
                                                  callback_data='clear_to_')
                           ]]).add(*key)
        await bot.edit_message_text(
          chat_id=call.message.chat.id,
          message_id=call.message.message_id,
          text=
          f'üì• –í–Ω—É—Ç—Ä–∏ –∫–æ—Ä–∑–∏–Ω—ã –∏–º–µ–µ—Ç—Å—è:\n{group.to_string(index=False, header=False)}\n—Ç–æ–≤–∞—Ä–æ–≤: {str(total_narx_)} —Å—É–º–º–∞\n–ó–∞ –∑–∞–∫–∞–∑: {yol_haqqi}\n –û–±—â–∞—è —Å—É–º–º–∞: {total} —Å—É–º–º–æ–≤',
          reply_markup=new_but)

      else:
        await bot.send_message(chat_id=call.message.chat.id,
                               text=translate_dict1[select[0][0]])
        await bot.delete_message(chat_id=call.message.chat.id,
                                 message_id=call.message.message_id)
    except:
      await call.message.answer(text=translate_dict[select[0][0]])
      await bot.delete_message(chat_id=call.message.chat.id,
                               message_id=call.message.message_id)
  except:
    await bot.send_message(
      call.message.chat.id,
      "üá∫üáø Botimiz yangilangaligi tufayli /start buyruqi orqali ishga tushuring\n\nüá∑üá∫ –í —Å–≤—è–∑–∏ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –±–æ—Ç–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç –∫–æ–º–º–∞–Ω–¥–æ–π /start"
    )


@dp.callback_query_handler(savat_callback.filter(item_name='minus'))
async def sub_the_choise(call: CallbackQuery, callback_data: dict):

  await call.answer(cache_time=1)
  minus = -1
  text = int(call.message.reply_markup.inline_keyboard[0][1].text) + minus
  if text > 0:
    call.message.reply_markup.inline_keyboard[0][1].text = str(text)
    temp = types.InlineKeyboardMarkup(
      inline_keyboard=call.message.reply_markup.inline_keyboard)
    await bot.edit_message_reply_markup(chat_id=call.message.chat.id,
                                        message_id=call.message.message_id,
                                        reply_markup=temp)


@dp.callback_query_handler(savat_callback.filter(item_name='sum'))
async def how_many_choises(call: CallbackQuery, callback_data: dict):
  try:
    t_conn = sqlite3.connect('flower.db')
    t_curr = t_conn.cursor()
    t_curr.execute(
      f"SELECT language FROM translates_from_id WHERE user_id = {call.message.chat.id}"
    )
    select = t_curr.fetchall()
    translate_dict = {'uzb': 'ta', 'rus': '—à—Ç—É–∫'}
    await call.answer(translate_dict[select[0][0]])
  except:
    await bot.send_message(
      call.message.chat.id,
      "üá∫üáø Botimiz yangilangaligi tufayli /start buyruqi orqali ishga tushuring\n\nüá∑üá∫ –í —Å–≤—è–∑–∏ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –±–æ—Ç–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç –∫–æ–º–º–∞–Ω–¥–æ–π /start"
    )


@dp.callback_query_handler(savat_callback.filter(item_name='plus'))
async def add_the_choise(call: CallbackQuery, callback_data: dict):
  try:
    t_conn = sqlite3.connect('flower.db')
    t_curr = t_conn.cursor()
    t_curr.execute(
      f"SELECT language FROM translates_from_id WHERE user_id = {call.message.chat.id}"
    )
    select = t_curr.fetchall()
    translate_dict = {
      'uzb':
      'Iltimos, kutib turing bu bir necha daqiqa vaqt olishi mumkin, sabringiz uchun raxmat',
      'rus':
      '–ü–æ–∂–∞–π–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç, –±–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ —Ç–µ–ø—Ä–µ–Ω–∏–µ'
    }

    await call.answer(cache_time=1)
    minus = 1
    text = int(call.message.reply_markup.inline_keyboard[0][1].text)
    call.message.reply_markup.inline_keyboard[0][1].text = str(text + minus)
    temp = types.InlineKeyboardMarkup(
      inline_keyboard=call.message.reply_markup.inline_keyboard)
    try:
      await bot.edit_message_reply_markup(chat_id=call.message.chat.id,
                                          message_id=call.message.message_id,
                                          reply_markup=temp)
    except:
      await call.answer(translate_dict[select[0][0]])
  except:
    await bot.send_message(
      call.message.chat.id,
      "üá∫üáø Botimiz yangilangaligi tufayli /start buyruqi orqali ishga tushuring\n\nüá∑üá∫ –í —Å–≤—è–∑–∏ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –±–æ—Ç–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç –∫–æ–º–º–∞–Ω–¥–æ–π /start"
    )


@dp.callback_query_handler(text='close')
async def back_for_inline(call: CallbackQuery):
  await bot.delete_message(chat_id=call.message.chat.id,
                           message_id=call.message.message_id)


@dp.callback_query_handler(text='clear_to_')
async def clear_for_inline(call: CallbackQuery):
  conn = sqlite3.connect('flower.db')
  cursor = conn.cursor()
  cursor.execute("DELETE FROM shopping WHERE user_id = ? AND is_fulfilled = ?",
                 (call.message.chat.id, 'No'))
  conn.commit()
  conn.close()
  await bot.delete_message(chat_id=call.message.chat.id,
                           message_id=call.message.message_id)


@dp.callback_query_handler(text='open_delivery')
async def FORWARD(call: CallbackQuery):
  try:
    t_conn = sqlite3.connect('flower.db')
    t_curr = t_conn.cursor()
    t_curr.execute(
      f"SELECT language FROM translates_from_id WHERE user_id = {call.message.chat.id}"
    )
    select = t_curr.fetchall()
    translate_dict = {
      'uzb': 'Buyurtma berish uchun qulay vaqtni tanlang:',
      'rus': '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–º —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞–∫–∞–∑–∞:'
    }
    await bot.delete_message(chat_id=call.message.chat.id,
                             message_id=call.message.message_id)
    await call.message.answer(
      text=translate_dict[select[0][0]],
      reply_markup=keyboards_reply[select[0][0]]['Buyurtmalar'])
  except:
    await bot.send_message(
      call.message.chat.id,
      "üá∫üáø Botimiz yangilangaligi tufayli /start buyruqi orqali ishga tushuring\n\nüá∑üá∫ –í —Å–≤—è–∑–∏ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –±–æ—Ç–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç –∫–æ–º–º–∞–Ω–¥–æ–π /start"
    )
